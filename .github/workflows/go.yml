name: Build and Release Combine Go Program

# Add permissions block at the workflow level
permissions:
  contents: write    # Required for creating releases and uploading assets
  discussions: none
  issues: none
  packages: none
  pull-requests: none

on:
  push:
    tags:
      - 'v*'  # Trigger only for version tags (e.g., v1.0.0)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.18', '1.19', '1.20']
        include:
          - os: ubuntu-latest
            go-version: '1.20'
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Verify Go version
        run: go version

      - name: Install dependencies
        run: go mod tidy || echo "go mod tidy failed, but continuing"

      - name: Build the program
        shell: bash
        run: |
          BINARY_NAME="combine"
          VERSION="${{ matrix.go-version }}"
          
          case "${{ matrix.os }}" in
            "ubuntu-latest")
              if [ "${{ matrix.arch }}" = "arm64" ]; then
                GOOS=linux GOARCH=arm64 go build -o "${BINARY_NAME}-linux-arm64-${VERSION}"
              else
                GOOS=linux GOARCH=amd64 go build -o "${BINARY_NAME}-linux-amd64-${VERSION}"
              fi
              ;;
            "windows-latest")
              GOOS=windows GOARCH=amd64 go build -o "${BINARY_NAME}-windows-amd64-${VERSION}.exe"
              ;;
            "macos-latest")
              GOOS=darwin GOARCH=amd64 go build -o "${BINARY_NAME}-darwin-amd64-${VERSION}"
              ;;
          esac

      - name: Compress binaries
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "combine-${{ matrix.os }}-${{ matrix.go-version }}.zip" "combine-windows-amd64-${{ matrix.go-version }}.exe"
          else
            tar czf "combine-${{ matrix.os }}-${{ matrix.go-version }}.tar.gz" combine-*-${{ matrix.go-version }}*
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: combine-${{ matrix.os }}-${{ matrix.go-version }}
          path: |
            *.tar.gz
            *.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2.2.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
